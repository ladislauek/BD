CREATE VIEW AULA_BD.VW_ALUNO_DEPARTAMENTO 
AS
(
SELECT  AL.NOME AS NOME_ALUNO, 
		DP.NOME AS NOME_DEPT 
FROM AULA_BD.ALUNO AL
JOIN AULA_BD.DEPARTAMENTO DP ON AL.ID_DEPARTAMENTO = DP.ID
);

SELECT * FROM AULA_BD.VW_ALUNO_DEPARTAMENTO;

DROP VIEW AULA_BD.VW_ALUNO_DEPARTAMENTO;

/*Trigger*/
CREATE TABLE AULA_BD.LOG 
	(ID INT(19) AUTO_INCREMENT PRIMARY KEY,
    ACAO VARCHAR(500),
    REGISTRO VARCHAR(500));
DROP TABLE AULA_BD.LOG;


delimiter |
CREATE TRIGGER  AULA_BD.TRIGGER_EXEMPLO_ALUNO AFTER UPDATE ON AULA_BD.ALUNO
FOR EACH ROW
BEGIN
	INSERT INTO AULA_BD.LOG(ACAO,REGISTRO) 
    VALUES ('UPDATE AULA_BD.ALUNO',CAST(OLD.ID as CHAR(50)));
END;
|
delimiter ;


DROP TRIGGER  AULA_BD.TRIGGER_EXEMPLO_ALUNO;
UPDATE AULA_BD.ALUNO SET TELEFONE = '3333' WHERE NOME = 'Leonardo';


/*PROCEDURE*/
delimiter //
CREATE PROCEDURE AULA_BD.DEPARTAMENTO_PROCEDURE (IN NOME VARCHAR(50))
BEGIN
	INSERT INTO AULA_BD.DEPARTAMENTO(NOME) VALUES (NOME);    
END;
//
delimiter ;
DROP PROCEDURE AULA_BD.DEPARTAMENTO_PROCEDURE;
CALL AULA_BD.DEPARTAMENTO_PROCEDURE('Dpto1');



delimiter |
CREATE FUNCTION AULA_BD.HELLO (s CHAR(20)) RETURNS CHAR(50) DETERMINISTIC
BEGIN
	RETURN CONCAT('Hello, ',s,'!'); 
END;
|
delimiter ;
DROP FUNCTION AULA_BD.HELLO;
SELECT AULA_BD.HELLO('CEIOT');

/*USUARIO*/
CREATE USER 'AULA' IDENTIFIED BY '12345678';

GRANT SELECT ON AULA_BD.ALUNO TO AULA;
GRANT DROP ON AULA_BD.ALUNO TO AULA;
REVOKE DROP ON AULA_BD.ALUNO FROM AULA;

SELECT * FROM AULA_BD.ALUNO;
SELECT * FROM AULA_BD.DEPARTAMENTO;